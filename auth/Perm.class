<?php

class Perm {
  
  ## Hash ("Name" => Permission-Bitmask)
  var $permissions = array ();

  function Perm($perms=null){
	$this->permissions=$perms;
  }

  ##
  ## Permission code
  ##
  function chekk($p) {
    global $_auth;

    if (! $this->have_perm($p)) {
      if (! isset($_auth->perms) ) {
        $_auth->perms = "";
      }
      $this->perm_invalid($_auth->perms, $p);
      exit();
    }
  }

  function have_perm($p) {
    global $_auth;
    
    if (! isset($_auth->perms) ) {
      $_auth->perms = "";
    }
    $pageperm = split(",", $p);
    $userperm = split(",", $_auth->perms);
    
    list ($ok0, $pagebits) = $this->permsum($pageperm);
    list ($ok1, $userbits) = $this->permsum($userperm);

    $has_all = (($userbits & $pagebits) == $pagebits);
    if (!($has_all && $ok0 && $ok1) ) {
      return false;
    } else {
      return true;
    }
  }

  ##
  ## Permission helpers.
  ##
  function permsum($p) {
    global $_auth;
    
    if (!is_array($p)) {
      return array(false, 0);
    }
    $perms = $this->permissions;
    
    $r = 0;
    reset($p);
    while(list($key, $val) = each($p)) {
      if (!isset($perms[$val])) {
        return array(false, 0);
      }
      $r |= $perms[$val];
    }

    return array(true, $r);
  }
  
  ## Look for a match within an list of strints
  ## I couldnt figure out a way to do this generally using ereg().

  function perm_islisted($perms, $look_for) {
    $permlist = explode( ",", $perms );
    while( list($a,$b) = each($permlist) ) {
      if( $look_for == $b ) { return true; };
    };
    return false;
  }

  ## Return a complete <select> tag for permission
  ## selection.
  
  function perm_sel($name, $current = "", $class = "") {
    reset($this->permissions);
    
    $ret = sprintf("<select multiple name=\"%s[]\"%s size=7>\n",
      $name,
      ($class!="")?" class=$class":"");
    while(list($k, $v) = each($this->permissions)) {
      $ret .= sprintf(" <option%s%s>%s\n",
                $this->perm_islisted($current,$k)?" selected":"",
                ($class!="")?" class=$class":"",
                $k);
    }
    $ret .= "</select>";

    return $ret;
  }

  ##
  ## Dummy Method. Must be overridden by user.
  ##
  function perm_invalid($does_have, $must_have) {   	
  	print "access denied: you are {$does_have}. for access you must be {$musthave}.";
  }
}
?>
